{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/models/incident.ts","webpack:///./src/app/modules/dashboard/dashboard.component.html","webpack:///./src/app/modules/dashboard/dashboard.component.ts","webpack:///./src/app/modules/home/home.component.html","webpack:///./src/app/modules/home/home.component.ts","webpack:///./src/app/modules/incident/incident.component.html","webpack:///./src/app/modules/incident/incident.component.ts","webpack:///./src/app/modules/login/login.component.html","webpack:///./src/app/modules/login/login.component.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<mat-toolbar>\r\n  <mat-toolbar-row>\r\n    <span>\r\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n          <mat-icon>more_vert</mat-icon>\r\n        </button>\r\n        <mat-menu #menu=\"matMenu\">\r\n          <button mat-menu-item>\r\n            <mat-icon>dialpad</mat-icon>\r\n            <span>Redial</span>\r\n          </button>\r\n          <button mat-menu-item disabled>\r\n            <mat-icon>voicemail</mat-icon>\r\n            <span>Check voicemail</span>\r\n          </button>\r\n          <button mat-menu-item>\r\n            <mat-icon>notifications_off</mat-icon>\r\n            <span>Disable alerts</span>\r\n          </button>\r\n        </mat-menu>\r\n    </span>\r\n    <span>County Of The Future</span>\r\n    <span>\r\n      <button mat-menu-item [routerLink]=\"['dashboard']\" routerLinkActive=\"router-link-active\">Dashboard</button>\r\n    </span>\r\n    <span>\r\n      <button mat-menu-item (click)=\"showIncident()\">Incident</button>\r\n    </span>\r\n    <span class=\"fill-remaining-space\"></span>\r\n    <span>\r\n      <button mat-menu-item (click)=\"showLogin()\">Login</button>\r\n    </span>\r\n  </mat-toolbar-row>\r\n</mat-toolbar>\r\n\r\n<!-- <app-login></app-login> -->\r\n<router-outlet></router-outlet>\r\n","import { Component } from '@angular/core';\r\nimport { MatMenuModule, MatDialog } from '@angular/material';\r\nimport { IncidentComponent } from './modules/incident/incident.component';\r\nimport { Incident } from './models/incident';\r\nimport { LoginComponent } from './modules/login/login.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  title = 'County Of The Future';\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n\r\n  showIncident() {\r\n    const dialogRef = this.dialog.open(IncidentComponent, {\r\n      width: '250px',\r\n      data: {incident: new Incident()}\r\n    });\r\n  }\r\n\r\n  showLogin() {\r\n    // const scrollStrategy = this.overlay.scrollStrategies.reposition();\r\n    const dialogRef = this.dialog.open(LoginComponent, {\r\n      width: '300px',\r\n      height: '400px',\r\n      // scrollStrategy:\r\n\r\n      data: { }\r\n    });\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport {ObserversModule} from '@angular/cdk/observers';\r\n\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule, MatCheckboxModule, MatToolbarModule, MatDialogModule, MatFormFieldModule } from '@angular/material';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { DashboardComponent } from './modules/dashboard/dashboard.component';\r\nimport { IncidentComponent } from './modules/incident/incident.component';\r\nimport { LoginComponent } from './modules/login/login.component';\r\nimport { HomeComponent } from './modules/home/home.component';\r\nimport { AuthenticationService } from './services/authentication.service';\r\n// import { Preloader } from './shared/preloader';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent, pathMatch: 'full'},\r\n  { path: 'dashboard', component: DashboardComponent },\r\n  { path: 'incident', component: IncidentComponent},\r\n  { path: 'login', component: LoginComponent},\r\n  // { path: 'not-found', component: PageNotFoundComponent },\r\n  { path: '**', redirectTo: '/not-found' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    IncidentComponent,\r\n    LoginComponent,\r\n    HomeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    ObserversModule,\r\n    BrowserAnimationsModule, MatButtonModule, MatCheckboxModule, MatMenuModule,\r\n    MatIconModule, MatDialogModule, MatToolbarModule, MatCardModule, MatFormFieldModule, MatProgressSpinnerModule,\r\n    RouterModule.forRoot(routes/*, { preloadingStrategy: Preloader }*/)\r\n  ],\r\n  providers: [AuthenticationService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export class Incident {\r\n}\r\n","<p>\n  dashboard works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  home works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  incident works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-incident',\n  templateUrl: './incident.component.html',\n  styleUrls: ['./incident.component.css']\n})\nexport class IncidentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<mat-card class=\"example-card\">\n  <mat-card-header>\n    <mat-card-title>Login</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <form class=\"example-form\">\n      <table class=\"example-full-width\" cellspacing=\"0\">\n        <tr>\n          <td>\n            <mat-form-field class=\"example-full-width\">\n            <input matInput placeholder=\"Username\" [(ngModel)]=\"this.model.username\" name=\"username\" required>\n            </mat-form-field>\n          </td>\n        </tr>\n        <tr>\n        <td><mat-form-field class=\"example-full-width\">\n          <input matInput placeholder=\"Password\" [(ngModel)]=\"this.model.password\"type=\"password\" name=\"password\" required>\n        </mat-form-field></td>\n      </tr></table>\n    </form>\n    <mat-spinner [style.display]=\"loading ? 'block' : 'none'\"></mat-spinner>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-raised-button (click)=\"login()\" color=\"primary\">Login</button>\n  </mat-card-actions>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../../services/authentication.service';\n// import { MatCard, MatCardContent, MatCardTitle, MatCardHeader, MatFormField, MatCardActions, MatSpinner } from '@angular/material';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: 'login.component.html'\n})\n\nexport class LoginComponent implements OnInit {\n    model: any = {};\n    loading = false;\n    returnUrl: string;\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService) { }\n\n    ngOnInit() {\n        // reset login status\n        // this.authenticationService.logout();\n\n        // // get return url from route parameters or default to '/'\n        // this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/';\n    }\n\n    login() {\n        // this.loading = true;\n        // this.authenticationService.login(this.model.username, this.model.password)\n        //     .subscribe(\n        //         data => {\n        //             this.router.navigate([this.returnUrl]);\n        //         },\n        //         error => {\n        //             console.log(error);\n        //             this.loading = false;\n        //         });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthenticationService {\n    constructor(private http: HttpClient) { }\n\n    login(username: string, password: string) {\n        return this.http.post<any>('/api/authenticate', { username, password })\n          .pipe(\n            map(user => {\n              // login successful if there's a jwt token in the response\n              if (user && user.token) {\n                  // store user details and jwt token in local storage to keep user logged in between page refreshes\n                  localStorage.setItem('currentUser', JSON.stringify(user));\n              }\n\n              return user;\n          }));\n    }\n\n    logout() {\n        // remove user from local storage to log user out\n        localStorage.removeItem('currentUser');\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}